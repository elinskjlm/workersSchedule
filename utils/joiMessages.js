module.exports.hebMessages = {
    'string.alphanum': '{{#label}} יכול להחיל רק אותיות אנגלית וספרות',
    'string.base': '{{#label}} חייב להיות מסוג \'string\'',
    // 'string.base64': '{{#label}} must be a valid base64 string',
    // 'string.creditCard': '{{#label}} must be a credit card',
    // 'string.dataUri': '{{#label}} must be a valid dataUri string',
    // 'string.domain': '{{#label}} must contain a valid domain name',
    // 'string.email': '{{#label}} must be a valid email',
    // 'string.empty': '{{#label}} is not allowed to be empty',
    // 'string.guid': '{{#label}} must be a valid GUID',
    // 'string.hex': '{{#label}} must only contain hexadecimal characters',
    // 'string.hexAlign': '{{#label}} hex decoded representation must be byte aligned',
    // 'string.hostname': '{{#label}} must be a valid hostname',
    // 'string.ip': '{{#label}} must be a valid ip address with a {{#cidr}} CIDR',
    // 'string.ipVersion': '{{#label}} must be a valid ip address of one of the following versions {{#version}} with a {{#cidr}} CIDR',
    // 'string.isoDate': '{{#label}} must be in iso format',
    // 'string.isoDuration': '{{#label}} must be a valid ISO 8601 duration',
    // 'string.length': '{{#label}} length must be {{#limit}} characters long',
    // 'string.lowercase': '{{#label}} must only contain lowercase characters',
    'string.max': '{{#label}} לא יכול להיות באורך של יותר מ-{{#limit}} תווים',
    'string.min': '{{#label}} לא יכול להיות באורך של פחות מ-{{#limit}} תווים',
    // 'string.normalize': '{{#label}} must be unicode normalized in the {{#form}} form',
    // 'string.token': '{{#label}} must only contain alpha-numeric and underscore characters',
    'string.pattern.base': '{{#label}} עם הערך {:[.]} לא תואם לתנאי ה-regex הנדרש: {{#regex}}',
    // 'string.pattern.name': '{{#label}} with value {:[.]} fails to match the {{#name}} pattern',
    // 'string.pattern.invert.base': '{{#label}} with value {:[.]} matches the inverted pattern: {{#regex}}',
    // 'string.pattern.invert.name': '{{#label}} with value {:[.]} matches the inverted {{#name}} pattern',
    // 'string.trim': '{{#label}} must not have leading or trailing whitespace',
    // 'string.uri': '{{#label}} must be a valid uri',
    // 'string.uriCustomScheme': '{{#label}} must be a valid uri with a scheme matching the {{#scheme}} pattern',
    // 'string.uriRelativeOnly': '{{#label}} must be a valid relative uri',
    // 'string.uppercase': '{{#label}} must only contain uppercase characters'

    'number.base': '{{#label}} חייב להיות מספר',
    // 'number.greater': '{{#label}} must be greater than {{#limit}}',
    // 'number.infinity': '{{#label}} cannot be infinity',
    // 'number.integer': '{{#label}} must be an integer',
    // 'number.less': '{{#label}} must be less than {{#limit}}',
    'number.max': '{{#label}} חייב להיות קטן או שווה ל-{{#limit}}',
    'number.min': '{{#label}} חייב להיות גדול או שווה ל-{{#limit}}',
    // 'number.multiple': '{{#label}} must be a multiple of {{#multiple}}',
    // 'number.negative': '{{#label}} must be a negative number',
    // 'number.port': '{{#label}} must be a valid port',
    // 'number.positive': '{{#label}} must be a positive number',
    // 'number.precision': '{{#label}} must have no more than {{#limit}} decimal places',
    // 'number.unsafe': '{{#label}} must be a safe number'

    // 'any.custom': '{{#label}} failed custom validation because {{#error.message}}',
    // 'any.default': '{{#label}} threw an error when running default method',
    // 'any.failover': '{{#label}} threw an error when running failover method',
    // 'any.invalid': '{{#label}} contains an invalid value',
    // 'any.only': '{{#label}} must be {if(#valids.length == 1, "", "one of ")}{{#valids}}',
    // 'any.ref': '{{#label}} {{#arg}} references {{:#ref}} which {{#reason}}',
    'any.required': '{{#label}} נדרש',
    // 'any.unknown': '{{#label}} is not allowed'
}